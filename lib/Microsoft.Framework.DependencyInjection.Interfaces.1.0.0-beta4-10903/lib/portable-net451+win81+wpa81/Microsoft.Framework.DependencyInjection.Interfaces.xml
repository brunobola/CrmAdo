<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Framework.DependencyInjection.Interfaces</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Framework.DependencyInjection.IServiceCollection">
            <summary>
            Specifies the contract for a collection of service descriptors.
            </summary>
        </member>
        <member name="M:Microsoft.Framework.DependencyInjection.IServiceCollection.Add(Microsoft.Framework.DependencyInjection.IServiceDescriptor)">
            <summary>
            Adds the <paramref name="descriptor"/> to this instance.
            </summary>
            <param name="descriptor">The <see cref="T:Microsoft.Framework.DependencyInjection.IServiceDescriptor"/> to add.</param>
            <returns>A reference to the current instance of <see cref="T:Microsoft.Framework.DependencyInjection.IServiceCollection"/>.</returns>
        </member>
        <member name="T:Microsoft.Framework.DependencyInjection.IServiceDescriptor">
            <summary>
            Secifies the contract for a type that contains information about a service.
            </summary>
            <remarks>
            <see cref="P:Microsoft.Framework.DependencyInjection.IServiceDescriptor.ImplementationType"/>, <see cref="P:Microsoft.Framework.DependencyInjection.IServiceDescriptor.ImplementationInstance"/>, amd <see cref="P:Microsoft.Framework.DependencyInjection.IServiceDescriptor.ImplementationFactory"/> specify the source 
            for the service instance. Only one of them should ever be non-null for a given <see cref="T:Microsoft.Framework.DependencyInjection.IServiceDescriptor"/> instance.
            </remarks>
        </member>
        <member name="P:Microsoft.Framework.DependencyInjection.IServiceDescriptor.Lifecycle">
            <summary>
            Gets the <see cref="T:Microsoft.Framework.DependencyInjection.LifecycleKind"/> of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.DependencyInjection.IServiceDescriptor.ServiceType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.DependencyInjection.IServiceDescriptor.ImplementationType">
            <summary>
            Gets the <see cref="P:Microsoft.Framework.DependencyInjection.IServiceDescriptor.ImplementationType"/> of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.DependencyInjection.IServiceDescriptor.ImplementationInstance">
            <summary>
            Gets the instance implementing the service.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.DependencyInjection.IServiceDescriptor.ImplementationFactory">
            <summary>
            Gets the factory used for creating service instances.
            </summary>
        </member>
        <member name="T:Microsoft.Framework.DependencyInjection.IServiceScope">
            <summary>
            The <see cref="M:System.IDisposable.Dispose"/> method ends the scope lifetime. Once Dispose
            is called, any scoped services that have been resolved from
            <see cref="P:Microsoft.Framework.DependencyInjection.IServiceScope.ServiceProvider"/> will be
            disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.DependencyInjection.IServiceScope.ServiceProvider">
            <summary>
            The <see cref="T:System.IServiceProvider"/> used to resolve dependencies from the scope.
            </summary>
        </member>
        <member name="M:Microsoft.Framework.DependencyInjection.IServiceScopeFactory.CreateScope">
            <summary>
            Create an <see cref="T:Microsoft.Framework.DependencyInjection.IServiceScope"/> which
            contains an <see cref="T:System.IServiceProvider"/> used to resolve dependencies from a
            newly created scope.
            </summary>
            <returns>
            An <see cref="T:Microsoft.Framework.DependencyInjection.IServiceScope"/> controlling the
            lifetime of the scope. Once this is disposed, any scoped services that have been resolved
            from the <see cref="P:Microsoft.Framework.DependencyInjection.IServiceScope.ServiceProvider"/>
            will also be disposed.
            </returns>
        </member>
    </members>
</doc>
